package com.le_cnam.studiumParisiense.enums;

public enum Relationships {
    HAS_NAME("HAS_NAME"),
    HAS_NAME_VARIANT("HAS_NAME_VARIANT"),
    HAS_ORIGIN("HAS_ORIGIN"),
    HAS_RELATION("HAS_RELATION"),
    HAS_COURSE("HAS_COURSE"),
    HAS_ECCLESIASTICAL_CAREER("HAS_ECCLESIASTICAL_CAREER"),
    HAS_PROFESSIONAL_CAREER("HAS_PROFESSIONAL_CAREER"),
    HAS_POLITICAL_CAREER("HAS_POLITICAL_CAREER"),
    HAS_VOYAGE("HAS_VOYAGE"),
    HAS_REFERENCE("HAS_REFERENCE"),
    STORED_IN("STORED_IN"),
    ALLOCATED_TO("ALLOCATED_TO"),
    OCCUPIED_BY("OCCUPIED_BY"),
    HAS_SIGN("HAS_SIGN"),
    IDENTIFIES("IDENTIFIES"),
    MENTIONS("MENTIONS"),
    MENTIONS_PERSON("MENTIONS_PERSON"),
    REFERS_TO("REFERS_TO"),
    CITED_BY("CITED_BY"),
    INCLUDES("INCLUDES"),
    CONTAINS("CONTAINS"),
    HAS_COMMENT("HAS_COMMENT"),
    HAS_LOCATION("HAS_LOCATION"),
    HAS_NATION("HAS_NATION"),
    GAINED_CARRIER("GAINED_CARRIER"),

    HAS_FAMILY_RELATION("HAS_FAMILY_RELATION"),
    HAS_SERVICE_RELATION("HAS_SERVICE_RELATION"),
    HAS_FRIEND_OR_ENEMY("HAS_FRIEND_OR_ENEMY"),
    HAS_INTELLECTUAL_DEBATE("HAS_INTELLECTUAL_DEBATE"),
    HAS_CORRESPONDENCE("HAS_CORRESPONDENCE"),
    HAS_PARTICULAR_GROUP("HAS_PARTICULAR_GROUP"),
    HAS_POLITICAL_CONNECTION("HAS_POLITICAL_CONNECTION"),
    HAS_COLLABORATION("HAS_COLLABORATION_CONNECTION"),
    HAS_EXECUTOR("HAS_EXECUTOR_CONNECTION"),
    HAS_MASTER_STUDENT("HAS_MASTER_STUDENT"),
    HAS_COLLEGE("HAS_COLLEGE"),
    HAS_RAW_TEXT("HAS_RAW_TEXT"),
    HAS_BIBLIOGRAPHY("HAS_BIBLIOGRAPHY"),

    HAS_PRE_UNIVERSITY_EDUCATION("HAS_PRE_UNIVERSITY_EDUCATION"),
    HAS_UNIVERSITY_OR_STUDIUM("HAS_UNIVERSITY_OR_STUDIUM"),
    HAS_CURRICULUM("HAS_CURRICULUM"),
    HAS_INFORMATION_COLLEGE("HAS_INFORMATION_COLLEGE"),
    HAS_FOUNDATION_COLLEGE("HAS_FOUNDATION_COLLEGE"),

    HAS_UNCERTAIN_ECCLESIASTICAL_STATUS("HAS_UNCERTAIN_ECCLESIASTICAL_STATUS"),
    HAS_SECULAR_ECCLESIASTIC("HAS_SECULAR_ECCLESIASTIC"),
    HAS_SECULAR_BENEFICES_HELD_BY_REGULAR_ECCLESIASTIC("HAS_SECULAR_BENEFICES_HELD_BY_REGULAR_ECCLESIASTIC"),
    HAS_REGULAR_ECCLESIASTIC("HAS_REGULAR_ECCLESIASTIC"),
    HAS_HIERARCHICAL_POSITION_IN_REGULAR_ORDER("HAS_HIERARCHICAL_POSITION_IN_REGULAR_ORDER"),
    HAS_PAPAL_FUNCTIONS("HAS_PAPAL_FUNCTIONS"),
    HAS_SCHOOL_MASTER_OR_TUTOR("HAS_SCHOOL_MASTER_OR_TUTOR"),

    HAS_LEGAL_PROFESSIONAL("HAS_LEGAL_PROFESSIONAL"),
    HAS_PROPERTY_ADMINISTRATOR("HAS_PROPERTY_ADMINISTRATOR"),
    HAS_ADMINISTRATION_ROYAL("HAS_ADMINISTRATION_ROYAL"),
    HAS_RELIGIOUS_FUNCTIONS_FOR_COURT("HAS_RELIGIOUS_FUNCTIONS_FOR_COURT"),
    HAS_CULTURAL_FUNCTIONS_FOR_COURT("HAS_CULTURAL_FUNCTIONS_FOR_COURT"),
    HAS_UNIVERSITY("HAS_UNIVERSITY"),
    HAS_CHAMBER_VALET("HAS_CHAMBER_VALET"),
    HAS_LOCAL_ADMINISTRATION_FUNCTIONS("HAS_LOCAL_ADMINISTRATION_FUNCTIONS"),
    HAS_REPRESENTATIONS_INCLUDING_ECLESIASTICAL_DIPLOMACY("HAS_REPRESENTATIONS_INCLUDING_ECLESIASTICAL_DIPLOMACY"),
    HAS_MERCHANT_ARTISAN_SOLDIER("HAS_MERCHANT_ARTISAN_SOLDIER"),
    HAS_DOCTOR_SURGEON("HAS_DOCTOR_SURGEON"),
    HAS_DIVERSE_PROFESSIONS("HAS_DIVERSE_PROFESSIONS"),
    HAS_ECCLESIASTICAL_FUNCTIONS("HAS_ECCLESIASTICAL_FUNCTIONS"),
    HAS_COMMUNITY_FOUNDATION("HAS_COMMUNITY_FOUNDATION");

    private final String type;

    Relationships(String type) {
        this.type = type;
    }

    public String getType() {
        return type;
    }

    public static Relationships fromType(String type) {
        for (Relationships relationship : Relationships.values()) {
            if (relationship.getType().equals(type)) {
                return relationship;
            }
        }
        throw new IllegalArgumentException("No relationship type found for: " + type);
    }
}
